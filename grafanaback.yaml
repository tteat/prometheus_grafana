apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana-core
  namespace: cloudplus
  labels:
    app: grafana
    component: core
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: grafana
        component: core
    spec:
      nodeSelector:
        type: monitor
      containers:
      - image: grafana/grafana:5.0.0
        name: grafana-core
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
          - name: GF_AUTH_BASIC_ENABLED
            value: "false"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
          - name: GF_PROVISIONING
            value: "conf/provisioning"
          - name: GF_AUTH_ANONYMOUS_ORG_ROLE
            value: Admin
        readinessProbe:
          httpGet:
            path: /login
            port: 3000
        volumeMounts:
           - name: sc-dashboards-volume
             mountPath: /etc/grafana/provisioning/dashboards
           - name: sc-datasources-volume
             mountPath: /etc/grafana/provisioning/datasources
           - name: sc-dashboards-provider
             mountPath: /etc/grafana/provisioning/dashboardsJson
      volumes:
      - name: sc-dashboards-provider
        hostPath:
          path: /var/lib/grafana/dashboards/
      - name: sc-datasources-volume
        configMap:
          name: grafana-datasource
      - name: sc-dashboards-volume
        configMap:
          name: grafana-dashboard
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: cloudplus
  labels:
    app: grafana
    component: core
spec:
  type: NodePort
  ports:
    - port: 3000
      nodePort: 31002
  selector:
    app: grafana
